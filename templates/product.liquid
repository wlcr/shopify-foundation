{% if product.metafields.inventory.ShappifyHidden == "true" %}
Product is not available
{% else %}

<div itemscope itemtype="http://schema.org/Product" id="product-details">
  
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}" />
  
<form method="post" action="/cart/add" class="shappify_add_to_cart_form" enctype="multipart/form-data">
  
		<div class="large-12 columns">
      
		  <hgroup id="product-title" class="text-center">
			<h2 itemprop="name">{{ product.title }}</h2>
			{% assign product_vendor_handle = product.vendor | handle %}
			{% comment %}
			Do we have a collection that has the same name as our product vendor name?
			If we do, let's have the vendor link point to it.
			If not, we will point to the automatic vendor collection.
			{% endcomment %}
			{% if collections[product_vendor_handle].handle == product_vendor_handle %}
			  {% assign vendor_url = collections[product_vendor_handle].url %}
			{% else %}
			  {% assign vendor_url = product.vendor | url_for_vendor %}
			{% endif %}
		  </hgroup>
		  
		</div>	

		<div>      
			<!-- #product-photos -->
		    <div class="small-12 medium-6 columns" id="product-images">
		        <div id="zoom{{ product.url | within: collection | replace: '/', '-' }}">
					<img src="{{ product.featured_image | product_img_url: 'master' }}" alt="{{ product.featured_image.alt | escape }}" id="product_feature_image" />
				</div>		
		        {% if product.images.size > 1 %}
		            <ul class="small-block-grid-4 product_thumbs">
		                {% for image in product.images %}
		                    <li><a href="{{ image | product_img_url: 'master' }}" title="{{ product.title }}"><img class="th" src="{{ image | product_img_url: 'small' }}" alt="{{ product.title | escape }}"></a></li>
		                {% endfor %}        
		            </ul>
		        {% endif %}
		    </div>
			<!-- for product image zoom - use the #id sets here for different behaviour - we add the stripped product URL to give it a unique ID -->
			<script>
				$(document).ready(function(){
					$('#zoom{{ product.url | within: collection | replace: '/', '-' }}').zoom();
					$('#grab{{ product.url | within: collection | replace: '/', '-' }}').zoom({ on:'grab' });
					$('#click{{ product.url | within: collection | replace: '/', '-' }}').zoom({ on:'click' });			 
					$('#toggle{{ product.url | within: collection | replace: '/', '-' }}').zoom({ on:'toggle' });
					$('#product-images').on('srcChange', function (e){
						$('.zoomImg').remove();
						$('#zoom{{ product.url | within: collection | replace: '/', '-' }}').zoom();		
					});
				});
			</script>
			<!-- End #product-photos -->
	               
			<div class="small-12 medium-6 columns">	          
	            {% assign hide_default_title = false %}
	            {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
	                {% assign hide_default_title = true %}
	            {% endif %}       
	    
	            <div id="product-variants" class="{% if hide_default_title %} hidden{% endif %}">
	                <select id="product-select" name="id" class="hidden">
	                {% for variant in product.variants %}
	                    <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
	                {% endfor %}
	                </select>
	            </div>
		        <div id="product-price" class="small-12 columns text-center " itemprop="offers" itemscope itemtype="http://schema.org/Offer">
		                <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
		                {% if product.available %}
		                <link itemprop="availability" href="http://schema.org/InStock" />
		                {% else %}
		                <link itemprop="availability" href="http://schema.org/OutOfStock" />
		                {% endif %}
		                <h5>
		                    {% if product.compare_at_price > product.price %}
		                    <span class="price" id="price" itemprop="price">{{ product.price | money }}</span>&nbsp;<s class="sale-price">{{ product.compare_at_price_max | money }}</s>
		                    {% else %}
		                    <span class="price" id="price" itemprop="price">{{ product.price | money }}</span>
		                    {% endif %}
		                </h5>
		        </div>
		        
	            <!-- <div id="backorder" class="hidden">
	                <p>{{ '%s is back-ordered. We will ship it separately in 10 to 15 days.' | replace: '%s', '<span id="selected-variant"></span>' }}</p>
	            </div> -->
	            
	            <div id="product-add" class="small-12 columns">
	                <input class="button add" type="submit" name="add" id="add" value="Add to cart">
	            </div>
	            {% include 'share' %} 
            </div>
		</div> 
  </form>             	  
		<hr>
        <div id="product-description" class="rte small-12 medium-8 columns clearfix" itemprop="description">
        <h2 class="text-left">Description</h2>
            <p>{{ product.description }}</p>
        </div>  

		<div class="small-12 medium-4 columns">
			<!-- Related Products -->
				{% include 'related-products' %}
			<!-- End Related Products -->
		</div>

 

</div>

<script>
jQuery(function($) {
  
  var selectCallback = function(variant, selector) {

    if (variant) {
      
      if (variant.available) {
        
        // Selected a valid variant that is available.
        $('#add').removeClass('disabled').removeAttr('disabled').val('Add to Cart').fadeTo(200,1);
      
        // If item is backordered yet can still be ordered, we'll show special message.
        if (variant.inventory_management && variant.inventory_quantity <= 0) {
          $('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
          $('#backorder').removeClass("hidden");
        } else {
          $('#backorder').addClass("hidden");
        }
        
      } else {
        // Variant is sold out.
        $('#backorder').addClass('hidden');
        $('#add').val('Sold Out').addClass('disabled').attr('disabled', 'disabled').fadeTo(200,0.5);        
      }
      
      // Whether the variant is in stock or not, we can update the price and compare at price.
      if ( variant.compare_at_price > variant.price ) {
        $('#price').html('<span id="price-field" class="price sale-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
      } else {
        $('#price').html('<span id="price-field" class="price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
      }        

    } else {
      // variant doesn't exist.
      $('#backorder').addClass('hidden');
      $('#add').val('Unavailable').addClass('disabled').attr('disabled', 'disabled').fadeTo(200,0.5);
    }

  };

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback });
  
  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').before('<label>{{ product.options.first }}</label>');
  {% endif %}
  
  // Auto-select first available variant on page load.
  {% assign found_one_in_stock = false %}
  {% for variant in product.variants %}
    {% if variant.available and found_one_in_stock == false %}
      {% assign found_one_in_stock = true %}
      {% for option in product.options %}
      $('.single-option-selector:eq({{ forloop.index0 }})').val({{ variant.options[forloop.index0] | json }}).trigger('change');
      {% endfor %}
    {% endif %}
  {% endfor %}

});

</script>

{% endif %}